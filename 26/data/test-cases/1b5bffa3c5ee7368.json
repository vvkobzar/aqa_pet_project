{"uid":"1b5bffa3c5ee7368","name":"Appearance tool tips","fullName":"tests.ui_tests.widgets_test.TestToolTipsPage#test_appearance_tool_tips","historyId":"4c4f02668a5ad2776c894f47322d65f5","time":{"start":1724765771191,"stop":1724765775342,"duration":4151},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <ui_tests.widgets_test.TestWidgets.TestToolTipsPage object at 0x7f1335fb4da0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c3fab88469edc638998ae303ed24e0e0\")>\n\n    @allure.title(\"Appearance tool tips\")\n    def test_appearance_tool_tips(self, driver):\n        tool_tips_page = ToolTipsPage(driver)\n        tool_tips_page.open()\n    \n        (tool_tip_text_button, tool_tip_text_field,\n>        tool_tip_text_contrary, tool_tip_text_section) = tool_tips_page.check_tool_tips()\n\ntests/ui_tests/widgets_test.py:301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/widgets_page.py:368: in check_tool_tips\n    tool_tip_text_contrary = self.get_text_from_tool_tips(\npages/widgets_page.py:352: in get_text_from_tool_tips\n    text = tool_tip_text.text\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1335308590>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1724765692589,"stop":1724765692706,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1724765770746,"stop":1724765771190,"duration":444},"status":"passed","steps":[{"name":"Setting up chrome browser with headless=True, page_load_strategy=eager","time":{"start":1724765770746,"stop":1724765771190,"duration":444},"status":"passed","steps":[{"name":"Starting Chrome browser for the test","time":{"start":1724765770746,"stop":1724765771189,"duration":443},"status":"passed","steps":[{"name":"Applying headless options for Chrome","time":{"start":1724765770746,"stop":1724765770746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <ui_tests.widgets_test.TestWidgets.TestToolTipsPage object at 0x7f1335fb4da0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c3fab88469edc638998ae303ed24e0e0\")>\n\n    @allure.title(\"Appearance tool tips\")\n    def test_appearance_tool_tips(self, driver):\n        tool_tips_page = ToolTipsPage(driver)\n        tool_tips_page.open()\n    \n        (tool_tip_text_button, tool_tip_text_field,\n>        tool_tip_text_contrary, tool_tip_text_section) = tool_tips_page.check_tool_tips()\n\ntests/ui_tests/widgets_test.py:301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/widgets_page.py:368: in check_tool_tips\n    tool_tip_text_contrary = self.get_text_from_tool_tips(\npages/widgets_page.py:352: in get_text_from_tool_tips\n    text = tool_tip_text.text\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1335308590>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Open page with URL: https://demoqa.com/tool-tips","time":{"start":1724765771191,"stop":1724765772477,"duration":1286},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check all tooltips on the page","time":{"start":1724765772477,"stop":1724765775341,"duration":2864},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/widgets_page.py\", line 368, in check_tool_tips\n    tool_tip_text_contrary = self.get_text_from_tool_tips(\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/widgets_page.py\", line 352, in get_text_from_tool_tips\n    text = tool_tip_text.text\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check tooltip for the 'Hover me to see' button","time":{"start":1724765772477,"stop":1724765773661,"duration":1184},"status":"passed","steps":[{"name":"Retrieve text from tooltip","time":{"start":1724765772478,"stop":1724765773661,"duration":1183},"status":"passed","steps":[{"name":"Hover over element to trigger tooltip","time":{"start":1724765772478,"stop":1724765773261,"duration":783},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765772478,"stop":1724765772522,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//button[@id='toolTipButton']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move to element","time":{"start":1724765772522,"stop":1724765772855,"duration":333},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"d6a0c954-d003-40fa-b18a-1e6a872c2f7c\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Wait for element to be visible","time":{"start":1724765772855,"stop":1724765772987,"duration":132},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765772855,"stop":1724765772901,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//button[@aria-describedby='buttonToolTip']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Scrolling to element","time":{"start":1724765772901,"stop":1724765772945,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"d6a0c954-d003-40fa-b18a-1e6a872c2f7c\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//button[@aria-describedby='buttonToolTip']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move to element","time":{"start":1724765772987,"stop":1724765773261,"duration":274},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"d6a0c954-d003-40fa-b18a-1e6a872c2f7c\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Extract tooltip text","time":{"start":1724765773261,"stop":1724765773661,"duration":400},"status":"passed","steps":[{"name":"Wait for element to be visible","time":{"start":1724765773261,"stop":1724765773458,"duration":197},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765773262,"stop":1724765773305,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//div[@class='tooltip-inner']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Scrolling to element","time":{"start":1724765773305,"stop":1724765773330,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"a05fa903-b044-4c83-b99f-cbe44cd2a804\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//div[@class='tooltip-inner']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7b53a7b9f43ccda4","name":"Tooltip Text","source":"7b53a7b9f43ccda4.txt","type":"text/plain","size":27}],"parameters":[{"name":"hover_elem","value":"('xpath', \"//button[@id='toolTipButton']\")"},{"name":"wait_elem","value":"('xpath', \"//button[@aria-describedby='buttonToolTip']\")"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":12,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Check tooltip for the 'Hover me to see' field","time":{"start":1724765773661,"stop":1724765774741,"duration":1080},"status":"passed","steps":[{"name":"Retrieve text from tooltip","time":{"start":1724765773661,"stop":1724765774741,"duration":1080},"status":"passed","steps":[{"name":"Hover over element to trigger tooltip","time":{"start":1724765773661,"stop":1724765774701,"duration":1040},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765773661,"stop":1724765773964,"duration":303},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//input[@id='toolTipTextField']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move to element","time":{"start":1724765773964,"stop":1724765774389,"duration":425},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"86d5e9e3-ef3d-4b48-bf71-672d7d341007\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Wait for element to be visible","time":{"start":1724765774390,"stop":1724765774425,"duration":35},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765774391,"stop":1724765774409,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//input[@aria-describedby='textFieldToolTip']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Scrolling to element","time":{"start":1724765774409,"stop":1724765774413,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"86d5e9e3-ef3d-4b48-bf71-672d7d341007\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//input[@aria-describedby='textFieldToolTip']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move to element","time":{"start":1724765774425,"stop":1724765774701,"duration":276},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"86d5e9e3-ef3d-4b48-bf71-672d7d341007\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Extract tooltip text","time":{"start":1724765774701,"stop":1724765774741,"duration":40},"status":"passed","steps":[{"name":"Wait for element to be visible","time":{"start":1724765774701,"stop":1724765774728,"duration":27},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765774701,"stop":1724765774707,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//div[@class='tooltip-inner']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Scrolling to element","time":{"start":1724765774707,"stop":1724765774711,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"21710661-1b4c-4491-bed5-9d82a38be866\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//div[@class='tooltip-inner']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"17347812903cf9f6","name":"Tooltip Text","source":"17347812903cf9f6.txt","type":"text/plain","size":31}],"parameters":[{"name":"hover_elem","value":"('xpath', \"//input[@id='toolTipTextField']\")"},{"name":"wait_elem","value":"('xpath', \"//input[@aria-describedby='textFieldToolTip']\")"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":12,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Check tooltip for the 'Contrary' link","time":{"start":1724765774741,"stop":1724765775340,"duration":599},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n","statusTrace":"  File \"/usr/workspace/pages/widgets_page.py\", line 368, in check_tool_tips\n    tool_tip_text_contrary = self.get_text_from_tool_tips(\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/widgets_page.py\", line 352, in get_text_from_tool_tips\n    text = tool_tip_text.text\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Retrieve text from tooltip","time":{"start":1724765774742,"stop":1724765775339,"duration":597},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/widgets_page.py\", line 352, in get_text_from_tool_tips\n    text = tool_tip_text.text\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Hover over element to trigger tooltip","time":{"start":1724765774742,"stop":1724765775301,"duration":559},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765774742,"stop":1724765774752,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//a[text()='Contrary']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move to element","time":{"start":1724765774752,"stop":1724765775021,"duration":269},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"8f2b054b-1ec7-4677-a0cb-34f6b975bee4\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Wait for element to be visible","time":{"start":1724765775022,"stop":1724765775043,"duration":21},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765775022,"stop":1724765775030,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//a[@aria-describedby='contraryTexToolTip']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Scrolling to element","time":{"start":1724765775030,"stop":1724765775034,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"8f2b054b-1ec7-4677-a0cb-34f6b975bee4\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//a[@aria-describedby='contraryTexToolTip']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move to element","time":{"start":1724765775043,"stop":1724765775301,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"8f2b054b-1ec7-4677-a0cb-34f6b975bee4\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Extract tooltip text","time":{"start":1724765775301,"stop":1724765775338,"duration":37},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n","statusTrace":"  File \"/usr/workspace/pages/widgets_page.py\", line 352, in get_text_from_tool_tips\n    text = tool_tip_text.text\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Wait for element to be visible","time":{"start":1724765775302,"stop":1724765775325,"duration":23},"status":"passed","steps":[{"name":"Wait for element to be present","time":{"start":1724765775302,"stop":1724765775309,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//div[@class='tooltip-inner']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Scrolling to element","time":{"start":1724765775310,"stop":1724765775313,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c3fab88469edc638998ae303ed24e0e0\", element=\"21710661-1b4c-4491-bed5-9d82a38be866\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', \"//div[@class='tooltip-inner']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"hover_elem","value":"('xpath', \"//a[text()='Contrary']\")"},{"name":"wait_elem","value":"('xpath', \"//a[@aria-describedby='contraryTexToolTip']\")"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":12,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":39,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Taking screenshot on failure","time":{"start":1724765775417,"stop":1724765775780,"duration":363},"status":"passed","steps":[],"attachments":[{"uid":"21f087f76e548d1f","name":"Failure Screenshot","source":"21f087f76e548d1f.png","type":"image/png","size":817500}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":42,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1724765775780,"stop":1724765775848,"duration":68},"status":"passed","steps":[{"name":"Quitting the browser","time":{"start":1724765775780,"stop":1724765775847,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"story","value":"Tool Tips"},{"name":"epic","value":"UI Tests"},{"name":"feature","value":"Widgets"},{"name":"parentSuite","value":"tests.ui_tests"},{"name":"suite","value":"widgets_test"},{"name":"subSuite","value":"TestWidgets"},{"name":"host","value":"d089ae462e6c"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui_tests.widgets_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"c94ce9017739c6d0","reportUrl":"https://vvkobzar.github.io/aqa_pet_project/25//#testresult/c94ce9017739c6d0","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","time":{"start":1724765324630,"stop":1724765327308,"duration":2678}},{"uid":"eefca783d3ccf085","reportUrl":"https://vvkobzar.github.io/aqa_pet_project/25//#testresult/eefca783d3ccf085","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1724759940634,"stop":1724759947665,"duration":7031}},{"uid":"33aaac8f04c1d56f","reportUrl":"https://vvkobzar.github.io/aqa_pet_project/24//#testresult/33aaac8f04c1d56f","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","time":{"start":1724749648710,"stop":1724749653090,"duration":4380}},{"uid":"7f64bec26c3e6020","reportUrl":"https://vvkobzar.github.io/aqa_pet_project/23//#testresult/7f64bec26c3e6020","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1724664400850,"stop":1724664407792,"duration":6942}},{"uid":"5ba1842c206ab446","reportUrl":"https://vvkobzar.github.io/aqa_pet_project/22//#testresult/5ba1842c206ab446","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","time":{"start":1724663855131,"stop":1724663859221,"duration":4090}}]},"tags":[]},"source":"1b5bffa3c5ee7368.json","parameterValues":[]}